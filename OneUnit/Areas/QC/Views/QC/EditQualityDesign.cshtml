@model QualityDesignViewModel
@{

    ViewData["Title"] = "ویرایش طرح کیفیت";
 
}
<h2>@ViewBag.Tilte</h2>
@section scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.min.js"></script>
}
<div class="col-md-6 col-md-offset-3">
    <div class="well">
        <form asp-action="EditQualityDesign" asp-area="QC" role="form">
            <div asp-validation-summary="ModelOnly"></div>
            <div class="modal-body form-horizontal">
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon" data-mddatetimepicker="true" data-trigger="click" data-targetselector="#fromDate1" data-groupid="group1"
                             data-fromdate="true" data-enabletimepicker="true" data-placement="left">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </div>
                        @*<input type="text" class="form-control" id="fromDate1" placeholder="از تاریخ" data-mddatetimepicker="true" data-trigger="click"
                data-targetselector="#fromDate1" data-groupid="group1" data-fromdate="true" data-enabletimepicker="true" data-placement="right" />*@

                        @Html.EditorFor(n => n.DateQD, new { htmlAttributes = new { @class = "form-control", id = "fromDate1", placeholder = " تاریخ", data_mddatetimepicker = "true", data_trigger = "click", data_targetselector = "#fromDate1", data_groupid = "group1", data_fromdate = "true", data_enabletimepicker = "true", data_placement = "right", onchange = "DateComparisionJavascriptFun();" } })
                        @Html.ValidationMessageFor(n => n.DateQD, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.Shift)
                    @Html.DropDownListFor(n => n.ShiftId, new SelectList(ViewBag.Shift, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "ComboShift", disabled = "true" })
                    @Html.ValidationMessageFor(n => n.ShiftId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.ProcessName)
                    @Html.DropDownListFor(n => n.ProcessNameId, new SelectList(ViewBag.ProcessName, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "ProcessName", data_trigger = "click" })
                    @Html.ValidationMessageFor(n => n.ProcessNameId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.ControlParameter)
                    @Html.DropDownListFor(n => n.ControlParameterId, new SelectList(ViewBag.ControlParameter, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "ControlParameter", data_trigger = "click" })
                    @Html.ValidationMessageFor(n => n.ControlParameterId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.ValueLimit)
                    @Html.EditorFor(n => n.ValueLimit, new { htmlAttributes = new { @class = "form-control", id = "ValueLimit" } })
                    @Html.ValidationMessageFor(n => n.ValueLimit, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.QParameterStatus)
                    @Html.DropDownListFor(n => n.QParameterStatusId, new SelectList(ViewBag.QParameterStatus, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "QParameterStatus" })
                    @Html.ValidationMessageFor(n => n.QParameterStatusId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.Confirmation)
                    @Html.DropDownListFor(n => n.ConfirmationId, new SelectList(ViewBag.Confirmation, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "Confirmation" })
                    @Html.ValidationMessageFor(n => n.ConfirmationId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.Label("lblUpperLimit", "حد بالا", new { id = "UpperLimit" })
                    @Html.Label("lblBottomLimit", "حد پایین", new { id = "BottomLimit" })
                    @Html.Label("lblProcessTypeId", "کدنوع فرآیند", new { id = "ProcessTypeId" })
                </div>
                @*<div class="form-group">
                    @Html.LabelFor(n => n.Tank)
                    @Html.DropDownListFor(n => n.TankId, new SelectList(ViewBag.Tank, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "Tank" })
                    @Html.ValidationMessageFor(n => n.TankId, "", new { @class = "text-danger" })
                </div>
                <div class="input-group">
                    <div class="input-group-addon" data-mddatetimepicker="true" data-trigger="click" data-targetselector="#fromDate2" data-groupid="group2"
                         data-fromdate="true" data-enabletimepicker="true" data-placement="left">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </div>
                    @Html.EditorFor(n => n.DateTankFilling, new { htmlAttributes = new { @class = "form-control", id = "fromDate2", placeholder = " تاریخ", data_mddatetimepicker = "true", data_targetselector = "#fromDate2", data_groupid = "group1", data_fromdate = "true", data_enabletimepicker = "true", data_placement = "right", } })
                    @Html.ValidationMessageFor(n => n.DateTankFilling, "", new { @class = "text-danger" })
                </div>
                <div class="input-group">
                    <div class="input-group-addon" data-mddatetimepicker="true" data-trigger="click" data-targetselector="#fromDate2" data-groupid="group2"
                         data-fromdate="true" data-enabletimepicker="true" data-placement="left">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </div>
                    @Html.EditorFor(n => n.DateTankDrain, new { htmlAttributes = new { @class = "form-control", id = "fromDate2", placeholder = " تاریخ", data_mddatetimepicker = "true", data_targetselector = "#fromDate2", data_groupid = "group1", data_fromdate = "true", data_enabletimepicker = "true", data_placement = "right", } })
                    @Html.ValidationMessageFor(n => n.DateTankDrain, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.LevelTank)
                    @Html.EditorFor(n => n.LevelTank, new { htmlAttributes = new { @class = "form-control", id = "LevelTank" } })
                    @Html.ValidationMessageFor(n => n.LevelTank, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.Storage)
                    @Html.DropDownListFor(n => n.StorageId, new SelectList(ViewBag.Storage, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "Storage" })
                    @Html.ValidationMessageFor(n => n.StorageId, "", new { @class = "text-danger" })
                </div>
                <div class="input-group">
                    <div class="input-group-addon" data-mddatetimepicker="true" data-trigger="click" data-targetselector="#fromDate3" data-groupid="group3"
                         data-fromdate="true" data-enabletimepicker="true" data-placement="left">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </div>
                    @Html.EditorFor(n => n.DateStorageTransfer, new { htmlAttributes = new { @class = "form-control", id = "fromDate3", placeholder = " تاریخ", data_mddatetimepicker = "true", data_targetselector = "#fromDate3", data_groupid = "group1", data_fromdate = "true", data_enabletimepicker = "true", data_placement = "right", } })
                    @Html.ValidationMessageFor(n => n.DateStorageTransfer, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.Production)
                    @Html.DropDownListFor(n => n.ProductionId, new SelectList(ViewBag.Production, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "Production" })
                    @Html.ValidationMessageFor(n => n.ProductionId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.ColumnNumber)
                    @Html.DropDownListFor(n => n.ColumnNumberId, new SelectList(ViewBag.ColumnNumber, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "ColumnNumber" })
                    @Html.ValidationMessageFor(n => n.ColumnNumberId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.Sampler)
                    @Html.DropDownListFor(n => n.Sampler, new SelectList(Model.Sampler, "Id", "UserName"), "انتخاب کنید", new { @class = "form-control", id = "Confirmation" })
                    @Html.ValidationMessageFor(n => n.SamplerId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.Tester)
                    @Html.DropDownListFor(n => n.Tester, new SelectList(Model.Sampler, "Id", "UserName"), "انتخاب کنید", new { @class = "form-control", id = "Confirmation" })
                    @Html.ValidationMessageFor(n => n.TesterId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.ControllerUser)
                    @Html.DropDownListFor(n => n.ControllerUser, new SelectList(Model.Sampler, "Id", "UserName"), "انتخاب کنید", new { @class = "form-control", id = "Confirmation" })
                    @Html.ValidationMessageFor(n => n.ControllerUserId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.SamplingLocation)
                    @Html.DropDownListFor(n => n.SamplingLocationId, new SelectList(ViewBag.SamplingLocation, "Id", "Name"), "انتخاب کنید", new { @class = "form-control", id = "SamplingLocation" })
                    @Html.ValidationMessageFor(n => n.SamplingLocationId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(n => n.Description)
                    @Html.EditorFor(n => n.Description, new { htmlAttributes = new { @class = "form-control", id = "Description" } })
                    @Html.ValidationMessageFor(n => n.Description, "", new { @class = "text-danger" })
                </div>*@
                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-lg"><i class="fa fa-envelope"></i>ثبت اطلاعات  </button>
                    <div class="text-success">@ViewBag.UserMessage</div>
                </div>
            </div>
        </form>
    </div>
</div>
